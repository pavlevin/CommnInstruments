import java.text.Format.Field;

class DBUser extends User {
	protected String serviceName;
	protected String login;
	protected String password;
	DBUser(String login, String password){
		this.login = login;
		this.password=password;
	}
	void setServiceName(String serviceName) {
		this.serviceName=serviceName;}
	String getServiceName(){
		return this.serviceName;}
	@Override
	void setLogin(String login){
		this.login=login;	
	}
	@Override
	String getLogin(){
		return this.login;
	}
	@Override
	void setPassword(String password) {
		this.password=password;
		
	}
	@Override
	String getPassword(){
		return password;
	}
}

class UnixUser extends User{
	protected String identityFile;
	protected String login;
	protected String password;
	UnixUser(String login, String password){
		this.login = login;
		this.password=password;
	}
	void setIdentityFile(String identityFile) {
		this.identityFile = identityFile;
	}
	String getIdentityFile() {
		return identityFile;
	}
	@Override
	void setLogin(String login) {
		this.login=login;	
	}
	@Override
	String getLogin() {
		return this.login;
	}
	@Override
	void setPassword(String password) {
		this.password=password;
		
	}
	@Override
	String getPassword() {
		return password;
	}

}

class InformaticaUser {
	
}



abstract class User{
	abstract void setLogin(String login);
	abstract String getLogin();
	abstract void setPassword(String password);
	abstract String getPassword();
	void setValue(String field,String value){
		try {
			java.lang.reflect.Field nme = this.getClass().getDeclaredField(field);
			nme.set(this, value);
		} catch (IllegalArgumentException  | SecurityException | NoSuchFieldException | IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	Object getValue(String field){
		try {
			java.lang.reflect.Field nme = this.getClass().getDeclaredField(field);
			return nme.get(this);
		} catch (IllegalArgumentException  | SecurityException | NoSuchFieldException | IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}
}



